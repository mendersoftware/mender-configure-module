stages:
  - test
  - trigger

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file:
      - '.gitlab-ci-github-status-updates.yml'
      - '.gitlab-ci-check-commits.yml'
      - '.gitlab-ci-check-license.yml'
      - '.gitlab-ci-check-python3-format.yml'

variables:
  MENDER_VERSION: mender-master
  MENDER_ARTIFACT_VERSION: 4.1.0
  MENDER_CONFIGURE_VERSION: $CI_COMMIT_REF_NAME

test:unit:
  stage: test
  needs: []
  image: python:alpine
  before_script:
    - apk add --update git make curl
    - git submodule update --init --recursive
  script:
    - make test

test:integration:
  stage: test
  needs: []
  image: docker:24.0.7-dind-alpine3.18
  tags:
    - mender-qa-worker-backend-integration-tests
  before_script:
    # DinD setup in Mender CI runners
    - unset DOCKER_HOST
    - unset DOCKER_TLS_VERIFY
    - unset DOCKER_CERT_PATH
    # Start dockerd in the background
    - /usr/local/bin/dockerd &
    # Wait for dockerd to start
    - |-
      MAX_WAIT=30
      while [ ! -e "/var/run/docker.sock" ] && [ $MAX_WAIT -gt 0 ]; do
        MAX_WAIT=$(($MAX_WAIT - 1))
        sleep 1
      done
    # Verify that the docker server is up and running
    - docker version
    # Init the git submodules
    - apk add --update --no-cache $(cat tests/integration/apk-requirements.txt)
    - git submodule update --init --recursive
    # Install test dependencies
    - apk add --update --no-cache $(cat tests/integration/mender_integration/tests/requirements-system/apk-requirements.txt)
    - pip install -r tests/integration/mender_integration/tests/requirements-python/python-requirements.txt
    # Download and install mender-artifact
    - apk add --no-cache dpkg
    - wget "https://downloads.mender.io/repos/workstation-tools/pool/main/m/mender-artifact/mender-artifact_${MENDER_ARTIFACT_VERSION}-1%2bubuntu%2bnoble_amd64.deb"
      --output-document mender-artifact.deb
    - dpkg --extract mender-artifact.deb /
  script:
    - cd tests/integration/
    - GENERATE_PYTEST_REPORT=true ./run.sh
  artifacts:
    expire_in: 2w
    when: always
    reports:
      junit: ${CI_PROJECT_DIR}/tests/integration/report.xml

trigger:integration:
  stage: trigger
  inherit:
    variables: false
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
  trigger:
    project: Northern.tech/Mender/integration
    branch: master
    strategy: depend
